{"ast":null,"code":"var _jsxFileName = \"/Users/abhayarao/Documents/PES Engineering/2nd YEAR/3rd SEM/WEB TECHNOLOGIES/Mini Project/portfolionaire/src/components/UserProfile.js\",\n  _s = $RefreshSig$();\n// UserProfile.js\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const {\n    name\n  } = useParams(); // Extract the name parameter from the URL\n\n  // Replace this part with your logic to dynamically fetch the profile information based on the name\n  const profileInfo = {\n    \"AbhirudhBN\": {\n      \"Name\": \"Abhirudh BN\",\n      \"Email\": \"abhirudhbn@gmail.com\",\n      \"About Yourself\": \"19 y/o and don't want to be 20\"\n      // ... rest of the profile information\n    }\n    // Add profiles for other users...\n  };\n\n  const user = profileInfo[name];\n  if (!user) {\n    // Handle the case when the profile information for the specified user is not found\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"User profile not found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"name\",\n      children: user.Name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"/NYLfKm8HcAtwQX2OcaWj21t07w=\", false, function () {\n  return [useParams];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["React","useParams","jsxDEV","_jsxDEV","UserProfile","_s","name","profileInfo","user","children","fileName","_jsxFileName","lineNumber","columnNumber","className","Name","_c","$RefreshReg$"],"sources":["/Users/abhayarao/Documents/PES Engineering/2nd YEAR/3rd SEM/WEB TECHNOLOGIES/Mini Project/portfolionaire/src/components/UserProfile.js"],"sourcesContent":["// UserProfile.js\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport '../App.css';\n\nconst UserProfile = () => {\n  const { name } = useParams(); // Extract the name parameter from the URL\n\n  // Replace this part with your logic to dynamically fetch the profile information based on the name\n  const profileInfo = {\n    \"AbhirudhBN\": {\n      \"Name\": \"Abhirudh BN\",\n      \"Email\": \"abhirudhbn@gmail.com\",\n      \"About Yourself\": \"19 y/o and don't want to be 20\",\n      // ... rest of the profile information\n    },\n    // Add profiles for other users...\n  };\n\n  const user = profileInfo[name];\n\n  if (!user) {\n    // Handle the case when the profile information for the specified user is not found\n    return <div>User profile not found</div>;\n  }\n\n  return (\n    <div className='profile'>\n      <h1 className='name'>{user.Name}</h1>\n      {/* Render other profile details based on the user object */}\n      {/* ... rest of your code */}\n    </div>\n  );\n};\n\nexport default UserProfile;\n"],"mappings":";;AAAA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAO,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM;IAAEC;EAAK,CAAC,GAAGL,SAAS,CAAC,CAAC,CAAC,CAAC;;EAE9B;EACA,MAAMM,WAAW,GAAG;IAClB,YAAY,EAAE;MACZ,MAAM,EAAE,aAAa;MACrB,OAAO,EAAE,sBAAsB;MAC/B,gBAAgB,EAAE;MAClB;IACF;IACA;EACF,CAAC;;EAED,MAAMC,IAAI,GAAGD,WAAW,CAACD,IAAI,CAAC;EAE9B,IAAI,CAACE,IAAI,EAAE;IACT;IACA,oBAAOL,OAAA;MAAAM,QAAA,EAAK;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC1C;EAEA,oBACEV,OAAA;IAAKW,SAAS,EAAC,SAAS;IAAAL,QAAA,eACtBN,OAAA;MAAIW,SAAS,EAAC,MAAM;MAAAL,QAAA,EAAED,IAAI,CAACO;IAAI;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGlC,CAAC;AAEV,CAAC;AAACR,EAAA,CA5BID,WAAW;EAAA,QACEH,SAAS;AAAA;AAAAe,EAAA,GADtBZ,WAAW;AA8BjB,eAAeA,WAAW;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}