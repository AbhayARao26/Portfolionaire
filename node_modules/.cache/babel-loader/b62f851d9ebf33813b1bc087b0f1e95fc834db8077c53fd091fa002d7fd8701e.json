{"ast":null,"code":"var _jsxFileName = \"/Users/abhayarao/Documents/PES Engineering/2nd YEAR/3rd SEM/WEB TECHNOLOGIES/Mini Project/portfolionaire/src/components/extrapage.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport '../App.css'; // Import your CSS file for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimatedIntroduction = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const text = [\"Portfolionaire, our dedicated resume website, is a dynamic tool catering specifically to the students of our class.\", \"This platform provides a centralized space for showcasing a comprehensive overview of skills, experiences, and achievements, empowering individuals to highlight their unique qualities.\", \"Its interactive features ensure a captivating user experience, fostering deeper engagement.\", \"Furthermore, Portfolionaire significantly boosts online visibility, optimizing searchability and discoverability in the digital realm.\", \"In essence, this platform stands as a strategic asset, delivering a modern, tailored, and impactful representation of each student's professional identity, ultimately enhancing their prospects in the competitive academic and professional landscape.\"];\n  const [animatedText, setAnimatedText] = useState([]);\n  const [lineIndex, setLineIndex] = useState(0);\n  const animateLine = line => {\n    const words = line.split(' ');\n    setAnimatedText(prev => [...prev, words.map((word, index) => /*#__PURE__*/_jsxDEV(AnimatedWord, {\n      word: word,\n      index: index\n    }, `${lineIndex}-${index}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"br\", {}, `br-${lineIndex}`, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]);\n    setLineIndex(lineIndex + 1);\n  };\n  const AnimatedWord = ({\n    word,\n    index\n  }) => {\n    _s();\n    const props = useSpring({\n      opacity: 1,\n      transform: 'translateY(0px)',\n      from: {\n        opacity: 0,\n        transform: 'translateY(20px)'\n      },\n      onRest: () => {\n        if (index === text[lineIndex].split(' ').length - 1) {\n          // The line has finished animating, trigger the next line\n          if (lineIndex < text.length - 1) {\n            animateLine(text[lineIndex + 1]);\n          }\n        }\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(animated.span, {\n      style: props,\n      children: [word, ' ']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  };\n  _s(AnimatedWord, \"2eLh5p/G96FiNolTD5G7yAACzvw=\", false, function () {\n    return [useSpring];\n  });\n  useEffect(() => {\n    if (text.length > 0) {\n      animateLine(text[0]);\n    }\n  }, [text]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animated-intro-container\",\n    children: animatedText\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 10\n  }, this);\n};\n_s2(AnimatedIntroduction, \"PxLEV8NVmczG5hjJEB81XVZT+AU=\");\n_c = AnimatedIntroduction;\nexport default AnimatedIntroduction;\nvar _c;\n$RefreshReg$(_c, \"AnimatedIntroduction\");","map":{"version":3,"names":["React","useEffect","useState","useSpring","animated","jsxDEV","_jsxDEV","AnimatedIntroduction","_s2","_s","$RefreshSig$","text","animatedText","setAnimatedText","lineIndex","setLineIndex","animateLine","line","words","split","prev","map","word","index","AnimatedWord","fileName","_jsxFileName","lineNumber","columnNumber","props","opacity","transform","from","onRest","length","span","style","children","className","_c","$RefreshReg$"],"sources":["/Users/abhayarao/Documents/PES Engineering/2nd YEAR/3rd SEM/WEB TECHNOLOGIES/Mini Project/portfolionaire/src/components/extrapage.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useSpring, animated } from 'react-spring';\nimport '../App.css'; // Import your CSS file for styling\n\nconst AnimatedIntroduction = () => {\n  const text = [\n    \"Portfolionaire, our dedicated resume website, is a dynamic tool catering specifically to the students of our class.\",\n    \"This platform provides a centralized space for showcasing a comprehensive overview of skills, experiences, and achievements, empowering individuals to highlight their unique qualities.\",\n    \"Its interactive features ensure a captivating user experience, fostering deeper engagement.\",\n    \"Furthermore, Portfolionaire significantly boosts online visibility, optimizing searchability and discoverability in the digital realm.\",\n    \"In essence, this platform stands as a strategic asset, delivering a modern, tailored, and impactful representation of each student's professional identity, ultimately enhancing their prospects in the competitive academic and professional landscape.\"\n  ];\n\n  const [animatedText, setAnimatedText] = useState([]);\n  const [lineIndex, setLineIndex] = useState(0);\n\n  const animateLine = (line) => {\n    const words = line.split(' ');\n\n    setAnimatedText((prev) => [\n      ...prev,\n      words.map((word, index) => (\n        <AnimatedWord key={`${lineIndex}-${index}`} word={word} index={index} />\n      )),\n      <br key={`br-${lineIndex}`} />,\n    ]);\n\n    setLineIndex(lineIndex + 1);\n  };\n\n  const AnimatedWord = ({ word, index }) => {\n    const props = useSpring({\n      opacity: 1,\n      transform: 'translateY(0px)',\n      from: { opacity: 0, transform: 'translateY(20px)' },\n      onRest: () => {\n        if (index === text[lineIndex].split(' ').length - 1) {\n          // The line has finished animating, trigger the next line\n          if (lineIndex < text.length - 1) {\n            animateLine(text[lineIndex + 1]);\n          }\n        }\n      },\n    });\n\n    return (\n      <animated.span style={props}>\n        {word}{' '}\n      </animated.span>\n    );\n  };\n\n  useEffect(() => {\n    if (text.length > 0) {\n      animateLine(text[0]);\n    }\n  }, [text]);\n\n  return <div className=\"animated-intro-container\">{animatedText}</div>;\n};\n\nexport default AnimatedIntroduction;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}